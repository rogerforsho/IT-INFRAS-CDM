@page
@model CDM.InventorySystem.Pages.Items.CheckOutModel
@{
    ViewData["Title"] = "Check Out Item";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">Check Out Item</h4>
                </div>
                <div class="card-body">
                    <!-- Barcode Scanner Section -->
                    <div class="mb-4">
                        <h5>Scan Barcode</h5>
                        <div class="d-flex gap-2 mb-3">
                            <button type="button" class="btn btn-outline-primary" id="startScanner">
                                Start Camera Scanner
                            </button>
                            <button type="button" class="btn btn-outline-secondary" id="stopScanner" style="display: none;">
                                Stop Scanner
                            </button>
                        </div>

                        <div id="scannerContainer" style="display: none;">
                            <video id="barcodeScanner" width="100%" height="300" style="border: 2px solid #007bff;"></video>
                            <div class="text-center mt-2">
                                <small class="text-muted">Point camera at barcode. Scanning will start automatically.</small>
                            </div>
                        </div>

                        <div class="mt-3">
                            <label class="form-label">Or Enter Barcode Manually</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="barcodeInput"
                                       placeholder="Enter barcode ID (e.g., CDM-KB-001)" />
                                <button type="button" class="btn btn-primary" onclick="lookupItem()">
                                    Lookup Item
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Item Details Section -->
                    <div id="itemDetails" style="display: none;">
                        <hr />
                        <h5>Item Details</h5>
                        <div class="row">
                            <div class="col-md-6">
                                <p><strong>Barcode:</strong> <span id="itemBarcode"></span></p>
                                <p><strong>Name:</strong> <span id="itemName"></span></p>
                                <p><strong>Category:</strong> <span id="itemCategory"></span></p>
                            </div>
                            <div class="col-md-6">
                                <p><strong>Available Stock:</strong> <span id="itemStock"></span></p>
                                <p><strong>Condition:</strong> <span id="itemCondition"></span></p>
                                <p><strong>Location:</strong> <span id="itemLocation"></span></p>
                            </div>
                        </div>

                        <!-- Checkout Form -->
                        <form method="post" id="checkoutForm">
                            <input type="hidden" asp-for="ItemId" id="formItemId" />

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label asp-for="BorrowerId" class="form-label">Borrower *</label>
                                        <select asp-for="BorrowerId" class="form-select" asp-items="Model.Users">
                                            <option value="">Select Borrower</option>
                                        </select>
                                        <span asp-validation-for="BorrowerId" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label asp-for="Quantity" class="form-label">Quantity *</label>
                                        <input asp-for="Quantity" class="form-control" type="number" min="1" value="1"
                                               id="quantityInput" />
                                        <span asp-validation-for="Quantity" class="text-danger"></span>
                                        <small class="form-text text-muted" id="maxQuantityText"></small>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label asp-for="DueDate" class="form-label">Due Date *</label>
                                        <input asp-for="DueDate" class="form-control" type="date"
                                               min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                                        <span asp-validation-for="DueDate" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label asp-for="Notes" class="form-label">Notes</label>
                                        <textarea asp-for="Notes" class="form-control" rows="2"></textarea>
                                    </div>
                                </div>
                            </div>

                            <div class="d-flex justify-content-between">
                                <button type="button" class="btn btn-secondary" onclick="resetForm()">
                                    Cancel
                                </button>
                                <button type="submit" class="btn btn-success">
                                    Confirm Check Out
                                </button>
                            </div>
                        </form>
                    </div>

                    <!-- Alert Messages -->
                    <div id="alertContainer"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/quagga@0.12.1/dist/quagga.min.js"></script>
    <script>
        let scannerActive = false;

        // Scanner Controls
        document.getElementById('startScanner').addEventListener('click', startScanner);
        document.getElementById('stopScanner').addEventListener('click', stopScanner);
        document.getElementById('barcodeInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') lookupItem();
        });

        function startScanner() {
            const scannerContainer = document.getElementById('scannerContainer');
            const startBtn = document.getElementById('startScanner');
            const stopBtn = document.getElementById('stopScanner');

            scannerContainer.style.display = 'block';
            startBtn.style.display = 'none';
            stopBtn.style.display = 'inline-block';

            // Initialize QuaggaJS barcode scanner
            Quagga.init({
                inputStream: {
                    name: "Live",
                    type: "LiveStream",
                    target: document.querySelector('#barcodeScanner'),
                    constraints: {
                        width: 640,
                        height: 480,
                        facingMode: "environment"
                    }
                },
                decoder: {
                    readers: ["code_128_reader", "ean_reader", "upc_reader"]
                }
            }, function(err) {
                if (err) {
                    console.error(err);
                    showAlert('Failed to initialize scanner: ' + err.message, 'danger');
                    return;
                }
                Quagga.start();
                scannerActive = true;
            });

            Quagga.onDetected(function(result) {
                if (scannerActive) {
                    const code = result.codeResult.code;
                    document.getElementById('barcodeInput').value = code;
                    lookupItem();
                    stopScanner();
                }
            });
        }

        function stopScanner() {
            if (scannerActive) {
                Quagga.stop();
                scannerActive = false;
            }

            const scannerContainer = document.getElementById('scannerContainer');
            const startBtn = document.getElementById('startScanner');
            const stopBtn = document.getElementById('stopScanner');

            scannerContainer.style.display = 'none';
            startBtn.style.display = 'inline-block';
            stopBtn.style.display = 'none';
        }

        async function lookupItem() {
            const barcode = document.getElementById('barcodeInput').value.trim();
            if (!barcode) {
                showAlert('Please enter a barcode', 'warning');
                return;
            }

            try {
                const response = await fetch(`/api/items/barcode/${encodeURIComponent(barcode)}`);
                if (response.ok) {
                    const item = await response.json();
                    displayItemDetails(item);
                } else {
                    showAlert('Item not found. Please check the barcode.', 'danger');
                }
            } catch (error) {
                console.error('Error:', error);
                showAlert('Error looking up item', 'danger');
            }
        }

        function displayItemDetails(item) {
            document.getElementById('itemBarcode').textContent = item.barcodeId;
            document.getElementById('itemName').textContent = item.itemName;
            document.getElementById('itemCategory').textContent = item.category;
            document.getElementById('itemStock').textContent = item.currentStock;
            document.getElementById('itemCondition').textContent = item.condition;
            document.getElementById('itemLocation').textContent = item.location || 'N/A';

            document.getElementById('formItemId').value = item.itemId;
            document.getElementById('quantityInput').max = item.currentStock;
            document.getElementById('quantityInput').value = 1;
            document.getElementById('maxQuantityText').textContent = `Max: ${item.currentStock} available`;

            document.getElementById('itemDetails').style.display = 'block';

            // Scroll to details
            document.getElementById('itemDetails').scrollIntoView({ behavior: 'smooth' });
        }

        function resetForm() {
            document.getElementById('barcodeInput').value = '';
            document.getElementById('itemDetails').style.display = 'none';
            document.getElementById('checkoutForm').reset();
            stopScanner();
        }

        function showAlert(message, type) {
            const alertContainer = document.getElementById('alertContainer');
            const alert = document.createElement('div');
            alert.className = `alert alert-${type} alert-dismissible fade show`;
            alert.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            alertContainer.appendChild(alert);

            setTimeout(() => {
                alert.remove();
            }, 5000);
        }

        // Set minimum due date to today
        const today = new Date().toISOString().split('T')[0];
        document.getElementById('DueDate').min = today;
    </script>
}