@page
@model CDM.InventorySystem.Pages.Transactions.IndexModel
@{
    ViewData["Title"] = "Transaction History";
}

<div class="container">
    <h1 class="mb-4">Transaction History</h1>

    <!-- Filters -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-3">
                    <label class="form-label">Transaction Type</label>
                    <select asp-for="TransactionType" class="form-select" onchange="this.form.submit()">
                        <option value="">All Types</option>
                        <option value="CheckOut">Check Out</option>
                        <option value="CheckIn">Check In</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Status</label>
                    <select asp-for="Status" class="form-select" onchange="this.form.submit()">
                        <option value="">All Status</option>
                        <option value="Active">Active</option>
                        <option value="Returned">Returned</option>
                        <option value="Overdue">Overdue</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Borrower</label>
                    <select asp-for="BorrowerId" class="form-select" onchange="this.form.submit()">
                        <option value="">All Borrowers</option>
                        @foreach (var user in Model.Users)
                        {
                            <option value="@user.Id">@user.FullName</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Date Range</label>
                    <input asp-for="StartDate" class="form-control" type="date" onchange="this.form.submit()" />
                </div>
            </form>
        </div>
    </div>

    <!-- Statistics -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card text-white bg-primary">
                <div class="card-body text-center">
                    <h5>Total Transactions</h5>
                    <h3>@Model.TotalTransactions</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-warning">
                <div class="card-body text-center">
                    <h5>Active Checkouts</h5>
                    <h3>@Model.ActiveCheckouts</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-danger">
                <div class="card-body text-center">
                    <h5>Overdue</h5>
                    <h3>@Model.OverdueCount</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-success">
                <div class="card-body text-center">
                    <h5>Returned</h5>
                    <h3>@Model.ReturnedCount</h3>
                </div>
            </div>
        </div>
    </div>

    <!-- Transactions Table -->
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">All Transactions</h5>
            <a href="/Transactions/Export" class="btn btn-outline-primary btn-sm">Export to CSV</a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Type</th>
                            <th>Item</th>
                            <th>Borrower</th>
                            <th>Processor</th>
                            <th>Quantity</th>
                            <th>Due Date</th>
                            <th>Return Date</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var transaction in Model.Transactions)
                        {
                            <tr>
                                <td>@transaction.TransactionDate.ToString("MMM dd, yyyy HH:mm")</td>
                                <td>
                                    @if (transaction.TransactionType == "CheckOut")
                                    {
                                        <span class="badge bg-success">Check Out</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-info">Check In</span>
                                    }
                                </td>
                                <td>
                                    <strong>@transaction.Item?.ItemName</strong>
                                    <br />
                                    <small class="text-muted">@transaction.Item?.BarcodeId</small>
                                </td>
                                <td>@transaction.Borrower?.FullName</td>
                                <td>@transaction.User?.FullName</td>
                                <td>@transaction.Quantity</td>
                                <td>
                                    @if (transaction.IsOverdue && transaction.ReturnDate == null)
                                    {
                                        <span class="text-danger fw-bold">@transaction.DueDate.ToString("MMM dd, yyyy")</span>
                                    }
                                    else
                                    {
                                        @transaction.DueDate.ToString("MMM dd, yyyy")
                                    }
                                </td>
                                <td>
                                    @if (transaction.ReturnDate.HasValue)
                                    {
                                        @transaction.ReturnDate.Value.ToString("MMM dd, yyyy HH:mm")
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    @if (transaction.ReturnDate.HasValue)
                                    {
                                        <span class="badge bg-secondary">Returned</span>
                                    }
                                    else if (transaction.IsOverdue)
                                    {
                                        <span class="badge bg-danger">Overdue</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">Active</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (!Model.Transactions.Any())
            {
                <div class="text-center py-4">
                    <h4 class="text-muted">No transactions found</h4>
                    <p class="text-muted">Try adjusting your filters.</p>
                </div>
            }

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Transaction pagination">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Page("", new { page = Model.CurrentPage - 1 })">Previous</a>
                        </li>

                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Page("", new { page = i })">@i</a>
                            </li>
                        }

                        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link" href="@Url.Page("", new { page = Model.CurrentPage + 1 })">Next</a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

<ItemGroup>
    <PackageReference Include="System.Drawing.Common" Version="8.0.0" />
    <PackageReference Include="Pomelo.EntityFrameworkCore.MySql" Version="8.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="8.0.0" />
</ItemGroup>